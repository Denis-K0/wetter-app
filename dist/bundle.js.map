{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;ACAa;;AAEb;AACA;AACA,qHAAqH,iBAAiB;AACtI,oEAAoE;AACpE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,iEAAe,cAAc;;;;;;;;;;;;;;;;;ACpBiB;AACsD;;AAEpG;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,QAAQ,2DAAc;AACtB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,gBAAgB,gDAAe;AAC/B,gBAAgB,gDAAe;AAC/B,aAAa;AACb;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gCAAgC;AAChC;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,2BAA2B,mBAAO,CAAC,yEAAgC;AACnE;AACA,2BAA2B,mBAAO,CAAC,2FAAyC;AAC5E;AACA;AACA;AACA,2BAA2B,mBAAO,CAAC,+EAAmC;AACtE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA,2BAA2B,mBAAO,CAAC,+EAAmC;AACtE;AACA;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA;AACA;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA;AACA;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mBAAO,CAAC,6EAAkC;AACrE;AACA,2BAA2B,mBAAO,CAAC,+FAA2C;AAC9E;AACA;AACA;AACA,2BAA2B,mBAAO,CAAC,+EAAmC;AACtE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA,2BAA2B,mBAAO,CAAC,+EAAmC;AACtE;AACA;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA;AACA;AACA,2BAA2B,mBAAO,CAAC,iFAAoC;AACvE;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,yBAAyB,mBAAO,CAAC,2DAAyB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yDAAyD;AACzD,2CAA2C,KAAK,+BAA+B,gBAAgB;AAC/F,2CAA2C,KAAK;AAChD,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,4BAA4B,gDAAe;AAC3C,kCAAkC;;AAElC;AACA;AACA;AACA,yDAAyD;AACzD,2DAA2D;AAC3D,4EAA4E,yBAAyB;AACrG,0EAA0E,mBAAmB;AAC7F,sEAAsE,kBAAkB;AACxF,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,wCAAO;AACf,QAAQ,0DAAyB;AACjC,QAAQ,wDAAuB;;AAE/B;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC/Z8D;;AAE9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,0DAAa;AAC7B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA,QAAQ,0DAAa;AACrB,KAAK;AACL;AACA;AACA,+BAA+B,2CAA2C;AAC1E,UAAU;AACV,+BAA+B,0CAA0C;AACzE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qFAAqF;AACrF,uDAAuD;AACvD,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,4BAA4B;AAC5B,4CAA4C;AAC5C,0EAA0E;AAC1E,+CAA+C;AAC/C,gEAAgE;AAChE,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAa;AACzB,SAAS;AACT;AACA,YAAY,0DAAa;AACzB,SAAS;AACT;AACA,YAAY,0DAAa;AACzB,SAAS;AACT,KAAK;AACL;AACA;;AAEA,uCAAuC,QAAQ;AAC/C,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV,2CAA2C,6CAA6C;AACxF;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd,+CAA+C,6CAA6C;AAC5F;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAa;AACzB,SAAS;AACT;AACA,YAAY,0DAAa;AACzB,SAAS;AACT,KAAK;AACL;AACA;;AAEA,uCAAuC,QAAQ;AAC/C,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,SAAS,IAAI,YAAY;AACzB,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,8BAA8B,0DAAa;AAC3C;AACA,8BAA8B,0DAAa;AAC3C;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCxSA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;;;;;;;;;;AClB2B;AACyB;AAC8D;;AAElH;;;AAGA,6DAAa;AACb,6CAAS;AACT,2DAAuB;AACvB,mDAAe;AACf,2CAAO;AACP,2CAAO;AACP,6DAAyB","sources":["webpack://Wetter-App/./src/style/style.css?320b","webpack://Wetter-App/./src/js/getWeatherData.js","webpack://Wetter-App/./src/js/setWeatherData.js","webpack://Wetter-App/./src/js/ui.js","webpack://Wetter-App/webpack/bootstrap","webpack://Wetter-App/webpack/runtime/define property getters","webpack://Wetter-App/webpack/runtime/global","webpack://Wetter-App/webpack/runtime/hasOwnProperty shorthand","webpack://Wetter-App/webpack/runtime/make namespace object","webpack://Wetter-App/webpack/runtime/publicPath","webpack://Wetter-App/./src/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","\"use strict\";\n\nconst getWeatherData = async (selectedLocation) => {\n    \n    const response = await fetch(`https://api.weatherapi.com/v1/forecast.json?key=4576e37b3e004227b9191411240505&q=${selectedLocation}&days=3&aqi=no&alerts=no`)\n        .catch(() => console.log(\"Error: Server not available\"));   //If fetch throw his own Error,\n                                                                    //this prevents that the Code stopps.\n    if (response?.status === 400) {\n        throw new Error('Bitte geben Sie einen g√ºltigen Ort ein.');\n    }\n\n    if (!response?.ok) {\n        throw new Error('Wetter Server nicht abrufbar');\n    };\n\n    const data = await response.json();\n\n    return data;\n};\n\nexport default getWeatherData;","import getWeatherData from \"./getWeatherData\";\nimport { FullDayOverview, DayBtns, ThreeDaysOverviewHeadline, ThreeDaysOverviewWindow } from \"./ui\";\n\n\"use strict\";\n\nlet weatherData = null;\n\nconst DataPlacement = {\n    showDay: 0,\n    selectors: {\n        city: document.getElementById('city'),\n        country: document.getElementById('country'),\n        currentDateAndTime: document.getElementById('currentDateAndTime'),\n        currentWeatherIcon: document.getElementById('currentWeatherIcon'),\n        currentWeatherDescription: document.getElementById('currentWeatherDescription'),\n        currentTemperature: document.getElementById('currentTemperature'),\n        currentRainChance: document.getElementById('currentRainChance'),\n        currentHumidity: document.getElementById('currentHumidity'),\n        currentWind: document.getElementById('currentWind'),\n        day01Name: document.getElementById('day01Name'),\n        day01Icon: document.getElementById('day01Icon'),\n        day01MaxTemperature: document.getElementById('day01MaxTemperature'),\n        day01MinTemperature: document.getElementById('day01MinTemperature'),\n        day02Name: document.getElementById('day02Name'),\n        day02Icon: document.getElementById('day02Icon'),\n        day02MaxTemperature: document.getElementById('day02MaxTemperature'),\n        day02MinTemperature: document.getElementById('day02MinTemperature'),\n        day03Name: document.getElementById('day03Name'),\n        day03Icon: document.getElementById('day03Icon'),\n        day03MaxTemperature: document.getElementById('day03MaxTemperature'),\n        day03MinTemperature: document.getElementById('day03MinTemperature'),\n        dateDay: document.getElementById('dateDay'),\n        dayIcon01: document.getElementById('dayIcon01'),\n        dayTemperature01: document.getElementById('dayTemperature01'),\n        dayRainChance01: document.getElementById('dayRainChance01'),\n        dayHumidity01: document.getElementById('dayHumidity01'),\n        dayWind01: document.getElementById('dayWind01'),\n        dayIcon02: document.getElementById('dayIcon02'),\n        dayTemperature02: document.getElementById('dayTemperature02'),\n        dayRainChance02: document.getElementById('dayRainChance02'),\n        dayHumidity02: document.getElementById('dayHumidity02'),\n        dayWind02: document.getElementById('dayWind02'),\n        dayIcon03: document.getElementById('dayIcon03'),\n        dayTemperature03: document.getElementById('dayTemperature03'),\n        dayRainChance03: document.getElementById('dayRainChance03'),\n        dayHumidity03: document.getElementById('dayHumidity03'),\n        dayWind03: document.getElementById('dayWind03'),\n        dayIcon04: document.getElementById('dayIcon04'),\n        dayTemperature04: document.getElementById('dayTemperature04'),\n        dayRainChance04: document.getElementById('dayRainChance04'),\n        dayHumidity04: document.getElementById('dayHumidity04'),\n        dayWind04: document.getElementById('dayWind04'),\n    },\n    setWeatherData(selectedLocation = \"G√∂ttingen\") {\n        const firstStart = true;\n        DataPlacement.openLoading();\n        getWeatherData(selectedLocation)\n            .then(data => {\n                DataPlacement.addDataToPlace(data);\n                return data;\n            })\n            .then(data => {\n                weatherData = data;\n                FullDayOverview.addScrollEvent();\n                FullDayOverview.addClassCenteredElement(firstStart, firstStart);\n            })\n            .catch(DataPlacement.error)\n            .finally(setTimeout(DataPlacement.closeLoading, 700));\n},\n    openLoading() {\n        console.log(\"Wait ...\");\n        const modal = document.getElementById('modal');\n        modal.showModal();\n    \n    },\n    closeLoading() {\n        console.log(\"... complete.\");\n        modal.close();\n    },\n    error: (err) => {\n        console.log('Fehler:', err.message);\n    \n        const selector = {\n            errorBtn: document.getElementById('errorBtn'),\n            errorMsg: document.getElementById('errorMsg'),\n            errorModal: document.getElementById('errorModal')\n        };\n    \n        selector.errorModal.showModal();\n        selector.errorMsg.textContent = 'Fehler: ' + err.message;\n        selector.errorBtn.addEventListener('click', () => selector.errorModal.close()); \n    },\n    addDataToPlace(data) {\n        this.selectors.city.textContent = data.location.name;\n        this.selectors.country.textContent = data.location.country;\n        this.selectors.currentDateAndTime.textContent = data.location.localtime.slice(-5) + ' - Aktuell';\n        this.selectors.currentWeatherIcon.src = this.chooseImg(data.current.condition.code, this.decideDayOrNight(data.current.condition.icon));\n        this.selectors.currentWeatherDescription.textContent = this.chooseDescription(data.current.condition.code, this.decideDayOrNight(data.current.condition.icon));\n        this.selectors.currentTemperature.textContent = data.current.temp_c + \"¬∞ \";\n        this.selectors.currentRainChance.textContent = data.forecast.forecastday[0].hour[this.getCurrentHour()].chance_of_rain + \" %\";\n        this.selectors.currentHumidity.textContent = data.current.humidity + \" %\";\n        this.selectors.currentWind.textContent = data.current.wind_kph + \" km/h\";\n        this.selectors.day01Name.textContent = this.formatDate(data.forecast.forecastday[0].date).slice(0, -12);\n        this.selectors.day01Icon.src = this.chooseImg(data.forecast.forecastday[0].day.condition.code, this.decideDayOrNight(data.forecast.forecastday[0].day.condition.icon));\n        this.selectors.day01MaxTemperature.textContent = data.forecast.forecastday[0].day.maxtemp_c + \"¬∞\";\n        this.selectors.day01MinTemperature.textContent = data.forecast.forecastday[0].day.mintemp_c + \"¬∞\";\n        this.selectors.day02Name.textContent = this.formatDate(data.forecast.forecastday[1].date).slice(0, -12);\n        this.selectors.day02Icon.src = this.chooseImg(data.forecast.forecastday[1].day.condition.code, this.decideDayOrNight(data.forecast.forecastday[1].day.condition.icon));\n        this.selectors.day02MaxTemperature.textContent = data.forecast.forecastday[1].day.maxtemp_c + \"¬∞\";\n        this.selectors.day02MinTemperature.textContent = data.forecast.forecastday[1].day.mintemp_c + \"¬∞\";\n        this.selectors.day03Name.textContent = this.formatDate(data.forecast.forecastday[2].date).slice(0, -12);\n        this.selectors.day03Icon.src = this.chooseImg(data.forecast.forecastday[2].day.condition.code, this.decideDayOrNight(data.forecast.forecastday[2].day.condition.icon));\n        this.selectors.day03MaxTemperature.textContent = data.forecast.forecastday[2].day.maxtemp_c + \"¬∞\";\n        this.selectors.day03MinTemperature.textContent = data.forecast.forecastday[2].day.mintemp_c + \"¬∞\";\n        \n        this.updateThreeDaysOverview(data)\n        this.updateFullDayOverview(data);\n    },\n    getCurrentHour() {\n        // Necessary for the current RainChance\n        const now = new Date(); // current Date and Time\n        const currentHour = now.getHours();\n        return currentHour;\n    },\n    formatDate(inputDate) {\n\n        var date = new Date(inputDate);\n    \n        // Tagebezeichnung abrufen (z.B. Montag, Dienstag usw.)\n        let daysOfWeek = ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'];\n        let dayOfWeek = daysOfWeek[date.getDay()];\n    \n        // Datum extrahieren\n        let day = date.getDate();\n        let month = date.getMonth() + 1; // Monate beginnen bei 0, daher +1\n        let year = date.getFullYear();\n    \n        // F√ºhrende Nullen f√ºr Tag und Monat hinzuf√ºgen, falls n√∂tig\n        day = (day < 10) ? '0' + day : day;\n        month = (month < 10) ? '0' + month : month;\n    \n        // Formatieren und zur√ºckgeben\n        let formattedDate = dayOfWeek + ', ' + day + '.' + month + '.' + year;\n        return formattedDate;\n    },\n    chooseImg(code, dayOrNight) {\n        if (dayOrNight === 'day') {\n            switch (code) {\n                case 1000:\n                    return require('../assets/weatherIcons/day.svg');\n                case 1003:\n                    return require('../assets/weatherIcons/cloudy-day-1.svg');\n                case 1006:\n                case 1009:\n                case 1030:\n                    return require('../assets/weatherIcons/cloudy.svg');\n                case 1063:\n                    return require('../assets/weatherIcons/rainy-2.svg');\n                case 1066:\n                    return require('../assets/weatherIcons/snowy-3.svg');\n                case 1069:\n                case 1072:\n                    return require('../assets/weatherIcons/rainy-2.svg');\n                case 1087:\n                    return require('../assets/weatherIcons/thunder.svg');\n                case 1114:\n                    return require('../assets/weatherIcons/snowy-5.svg');\n                case 1117:\n                    return require('../assets/weatherIcons/snowy-6.svg');\n                case 1135:\n                case 1147:\n                    return require('../assets/weatherIcons/cloudy.svg');\n                case 1150:\n                case 1153:\n                    return require('../assets/weatherIcons/rainy-7.svg');\n                case 1168:\n                case 1171:\n                    return require('../assets/weatherIcons/rainy-7.svg');\n                case 1180:\n                case 1183:\n                    return require('../assets/weatherIcons/rainy-2.svg');\n                case 1186:\n                case 1189:\n                case 1192:\n                case 1195:\n                    return require('../assets/weatherIcons/rainy-3.svg');\n                case 1198:\n                    return require('../assets/weatherIcons/rainy-4.svg');\n                case 1201:\n                    return require('../assets/weatherIcons/rainy-6.svg');\n                case 1204:\n                    return require('../assets/weatherIcons/rainy-4.svg');\n                case 1207:\n                    return require('../assets/weatherIcons/rainy-6.svg');\n                case 1210:\n                    return require('../assets/weatherIcons/snowy-2.svg');\n                case 1213:\n                    return require('../assets/weatherIcons/snowy-4.svg');\n                case 1216:\n                    return require('../assets/weatherIcons/snowy-3.svg');\n                case 1219:\n                    return require('../assets/weatherIcons/snowy-5.svg');\n                case 1222:\n                    return require('../assets/weatherIcons/snowy-3.svg');\n                case 1225:\n                    return require('../assets/weatherIcons/snowy-6.svg');\n                case 1237:\n                    return require('../assets/weatherIcons/snowy-4.svg');\n                case 1240:\n                    return require('../assets/weatherIcons/rainy-2.svg');\n                case 1243:\n                case 1246:\n                    return require('../assets/weatherIcons/rainy-3.svg');\n                case 1249:\n                    return require('../assets/weatherIcons/rainy-2.svg');\n                case 1252:\n                    return require('../assets/weatherIcons/rainy-3.svg');\n                case 1255:\n                    return require('../assets/weatherIcons/snowy-2.svg');\n                case 1258:\n                    return require('../assets/weatherIcons/snowy-3.svg');\n                case 1261:\n                    return require('../assets/weatherIcons/snowy-2.svg');\n                case 1264:\n                    return require('../assets/weatherIcons/snowy-3.svg');\n                case 1273:\n                case 1276:\n                case 1279:\n                case 1282:\n                    return require('../assets/weatherIcons/thunder.svg');\n                default:\n                  console.log('Error: Invalid weather code!')\n              }\n        }\n    \n        if (dayOrNight === 'night') {\n            switch (code) {\n                case 1000:\n                    return require('../assets/weatherIcons/night.svg');\n                case 1003:\n                    return require('../assets/weatherIcons/cloudy-night-3.svg');\n                case 1006:\n                case 1009:\n                case 1030:\n                    return require('../assets/weatherIcons/cloudy.svg');\n                case 1063:\n                    return require('../assets/weatherIcons/rainy-4.svg');\n                case 1066:\n                    return require('../assets/weatherIcons/snowy-4.svg');\n                case 1069:\n                case 1072:\n                    return require('../assets/weatherIcons/rainy-4.svg');\n                case 1087:\n                    return require('../assets/weatherIcons/thunder.svg');\n                case 1114:\n                    return require('../assets/weatherIcons/snowy-5.svg');\n                case 1117:\n                    return require('../assets/weatherIcons/snowy-6.svg');\n                case 1135:\n                case 1147:\n                    return require('../assets/weatherIcons/cloudy.svg');\n                case 1150:\n                case 1153:\n                    return require('../assets/weatherIcons/rainy-7.svg');\n                case 1168:\n                case 1171:\n                    return require('../assets/weatherIcons/rainy-6.svg');\n                case 1180:\n                case 1183:\n                    return require('../assets/weatherIcons/rainy-4.svg');\n                case 1186:\n                case 1189:\n                    return require('../assets/weatherIcons/rainy-5.svg');\n                case 1192:\n                case 1195:\n                    return require('../assets/weatherIcons/rainy-6.svg');\n                case 1198:\n                    return require('../assets/weatherIcons/rainy-4.svg');\n                case 1201:\n                    return require('../assets/weatherIcons/rainy-6.svg');\n                case 1204:\n                    return require('../assets/weatherIcons/rainy-4.svg');\n                case 1207:\n                    return require('../assets/weatherIcons/rainy-6.svg');\n                case 1210:\n                case 1213:\n                    return require('../assets/weatherIcons/snowy-4.svg');\n                case 1216:\n                case 1219:\n                    return require('../assets/weatherIcons/snowy-5.svg');\n                case 1222:\n                case 1225:\n                    return require('../assets/weatherIcons/snowy-6.svg');\n                case 1237:\n                    return require('../assets/weatherIcons/snowy-4.svg');\n                case 1240:\n                    return require('../assets/weatherIcons/rainy-4.svg');\n                case 1243:\n                    return require('../assets/weatherIcons/rainy-5.svg');\n                case 1246:\n                    return require('../assets/weatherIcons/rainy-6.svg');\n                case 1249:\n                    return require('../assets/weatherIcons/rainy-4.svg');\n                case 1252:\n                    return require('../assets/weatherIcons/rainy-6.svg');\n                case 1255:\n                    return require('../assets/weatherIcons/snowy-4.svg');\n                case 1258:\n                    return require('../assets/weatherIcons/snowy-6.svg');\n                case 1261:\n                    return require('../assets/weatherIcons/snowy-4.svg');\n                case 1264:\n                    return require('../assets/weatherIcons/snowy-6.svg');\n                case 1273:\n                case 1276:\n                case 1279:\n                case 1282:\n                    return require('../assets/weatherIcons/thunder.svg');\n                default:\n                  console.log('Error: Invalid weather code!')\n            }\n        }\n    },\n    decideDayOrNight(src) {\n        if (src.includes('day')) return 'day';\n        return 'night' \n    },\n    chooseDescription(code, dayOrNight, selectedLang = 'German') {\n        const langData = require('../assets/langData.json');\n    \n        // Find the weather-data based on the code\n        const weather = langData.find(item => item.code === code);\n        if (!weather) {\n            return console.log('Wettercode nicht gefunden');\n        }\n    \n        // find the language-data based on the language\n        const language = weather.languages.find(lang => lang.lang_name === selectedLang);\n        if (!language) {\n            return console.log('Sprache nicht gefunden');\n        }\n    \n        // Return the description based on the daytime\n        if (dayOrNight === 'day') {\n            return language.day_text;\n        } else if (dayOrNight === 'night') {\n            return language.night_text;\n        } else {\n            return console.log('Ung√ºltige Tageszeit');\n        }\n    },\n    updateFullDayOverview(data = weatherData, day = DataPlacement.showDay) {\n        const hours = data.forecast.forecastday[day].hour;\n        \n        hours.forEach((hourData, index) => {\n            const hour = String(index).padStart(2, '0'); // Formate to 2 numbers\n            document.getElementById(`hour${hour}Temperature`).textContent = `${hourData.temp_c}¬∞`;\n            document.getElementById(`hour${hour}Icon`).src = this.chooseImg(hourData.condition.code, this.decideDayOrNight(hourData.condition.icon));\n        });\n    },\n    updateThreeDaysOverview(data = weatherData, day = DataPlacement.showDay) {\n                this.selectors.dateDay.textContent = this.formatDate(data.forecast.forecastday[day].date);\n                this.selectors.dayIcon01.src = this.chooseImg(data.forecast.forecastday[day].hour[6].condition.code, this.decideDayOrNight(data.forecast.forecastday[day].hour[6].condition.icon));\n                this.selectors.dayTemperature01.textContent = data.forecast.forecastday[day].hour[6].temp_c + \"¬∞ \";\n                this.selectors.dayRainChance01.textContent = data.forecast.forecastday[day].hour[6].chance_of_rain + \" %\";\n                this.selectors.dayHumidity01.textContent = data.forecast.forecastday[day].hour[6].humidity + \" %\";\n                this.selectors.dayWind01.textContent = data.forecast.forecastday[day].hour[6].wind_kph;\n                this.selectors.dayIcon02.src = this.chooseImg(data.forecast.forecastday[day].hour[12].condition.code, this.decideDayOrNight(data.forecast.forecastday[day].hour[12].condition.icon));\n                this.selectors.dayTemperature02.textContent = data.forecast.forecastday[day].hour[12].temp_c + \"¬∞ \";\n                this.selectors.dayRainChance02.textContent = data.forecast.forecastday[day].hour[12].chance_of_rain + \" %\";\n                this.selectors.dayHumidity02.textContent = data.forecast.forecastday[day].hour[12].humidity + \" %\";\n                this.selectors.dayWind02.textContent = data.forecast.forecastday[day].hour[12].wind_kph;\n                this.selectors.dayIcon03.src = this.chooseImg(data.forecast.forecastday[day].hour[18].condition.code, this.decideDayOrNight(data.forecast.forecastday[day].hour[18].condition.icon));\n                this.selectors.dayTemperature03.textContent = data.forecast.forecastday[day].hour[18].temp_c + \"¬∞ \";\n                this.selectors.dayRainChance03.textContent = data.forecast.forecastday[day].hour[18].chance_of_rain + \" %\";\n                this.selectors.dayHumidity03.textContent = data.forecast.forecastday[day].hour[18].humidity + \" %\";\n                this.selectors.dayWind03.textContent = data.forecast.forecastday[day].hour[18].wind_kph;\n                this.selectors.dayIcon04.src = this.chooseImg(data.forecast.forecastday[day].hour[23].condition.code, this.decideDayOrNight(data.forecast.forecastday[day].hour[23].condition.icon));\n                this.selectors.dayTemperature04.textContent = data.forecast.forecastday[day].hour[23].temp_c + \"¬∞ \";\n                this.selectors.dayRainChance04.textContent = data.forecast.forecastday[day].hour[23].chance_of_rain + \" %\";\n                this.selectors.dayHumidity04.textContent = data.forecast.forecastday[day].hour[23].humidity + \" %\";\n                this.selectors.dayWind04.textContent = data.forecast.forecastday[day].hour[23].wind_kph;\n    },\n    setConditions(element = FullDayOverview.centeredElement, day = DataPlacement.showDay) {\n        if (!weatherData) return; // No Data = Nothing to do\n\n        const hours = weatherData.forecast.forecastday[day].hour;\n    \n        hours.forEach((hourData, index) => {\n            const hour = String(index).padStart(2, '0'); // Formate to 2 numbers\n            if (!element.classList.contains(hour)) return; // Right Hour? Continue \n            document.getElementById(`hourRainChanceValue`).textContent = `${hourData.chance_of_rain} %`;\n            document.getElementById(`hourHumidityValue`).textContent = `${hourData.humidity} %`;\n            document.getElementById(`hourWindValue`).textContent = `${hourData.wind_kph}`;\n        });\n    },\n    changeDay(day, arrow) {\n        // Handle right day, when a arrow was clicked\n        if (arrow) {\n            day = this.showDay + day;\n            if(day === 3) day = 0;\n            if(day === -1) day = 2;\n        };\n        \n        this.showDay = day;\n\n        DayBtns.changeClass(day);\n        ThreeDaysOverviewHeadline.changeDotClass(day);\n        ThreeDaysOverviewWindow.changeClasses();\n\n        // Change the data depending to the Day\n        this.updateFullDayOverview();\n        this.updateThreeDaysOverview();\n        this.setConditions();\n    }\n}\n\nexport { DataPlacement, weatherData };","import { DataPlacement, weatherData } from \"./setWeatherData\";\n\n\"use strict\";\n\nconst SearchBar = {\n    submitButton: document.getElementById('submitLocationBtn'),\n    locationInput: document.getElementById('locationInput'),\n    searchCityInputContainer: document.getElementById('searchCityInputContainer'),\n    addEvents() {\n        this.submitButton.addEventListener('click', () => {\n            this.locationInput.focus();\n            this.searchCityInputContainer.classList.add('active');\n        });\n        this.locationInput.addEventListener('keypress', (event) => {\n            if (event.key === \"Enter\" || event.keyCode === 13) {\n                const selectedLocation = this.locationInput.value;\n                this.searchCityInputContainer.classList.remove('active');\n                DataPlacement.setWeatherData(selectedLocation);\n            }\n        });\n        this.locationInput.addEventListener('blur', () => {\n            this.searchCityInputContainer.classList.remove('active')\n            // If no input added, than set to default\n            if (this.locationInput.value === '') this.locationInput.value = 'Das Wetter in ...';\n        });\n        this.locationInput.addEventListener('focus', () => {\n            this.clearInputByFocus();\n        });\n    },\n    clearInputByFocus() {\n        this.locationInput.value = '';\n    },\n}\n\nconst FullDayOverview = {\n    leftBtn: document.getElementById('swipeLeftFullDayOverviewBtn'),\n    rightBtn: document.getElementById('swipeRightFullDayOverviewBtn'),\n    itemWidth: document.querySelector(\".hour\").offsetWidth,\n    list: document.getElementById('fullDayOverviewList'),\n    listItems: document.querySelectorAll('.hour'),\n    centeredElement: null,\n    start() {\n        this.addEvents();\n        this.setCenteredViewPosition();\n    },\n    setCenteredViewPosition() {\n        // Calculate the middle of the list\n        const listWidth = this.list.scrollWidth;\n        const middlePosition = listWidth / 2;\n\n        // Scroll to the middle of the list\n        this.list.scrollTo({\n            left: middlePosition - (this.list.clientWidth / 2) + (this.list.clientWidth / 30),\n            behavior: \"smooth\"\n        });\n    },\n    getCenteredElement() {\n        // Calculate middle position of visible area\n        const middlePosition = FullDayOverview.list.scrollLeft + \n                            (FullDayOverview.list.clientWidth / 2);\n    \n        // Find the element in the middle Position of the visible area\n        let centeredElement = null;\n    \n        FullDayOverview.listItems.forEach(item => {\n            const itemLeft = item.offsetLeft;\n            const itemWidth = item.offsetWidth;\n            const itemRight = itemLeft + itemWidth;\n    \n            // Check the distance of item to the middle position\n            if (itemLeft <= middlePosition && itemRight >= middlePosition) {\n                centeredElement = item;\n            }\n        });\n    \n        return centeredElement;     \n    },\n    addEvents() {\n        this.leftBtn.addEventListener('click', function() {\n            FullDayOverview.handleClick('previous');\n        });\n        this.rightBtn.addEventListener('click', function() {\n            FullDayOverview.handleClick('next');\n        });\n\n        // Slider-Events\n        this.list.addEventListener('mousedown', (e) => this.startDragging(e), false);\n        this.list.addEventListener('mouseup', () => this.stopDragging(), false);\n        this.list.addEventListener('mouseleave', () => this.stopDragging(), false);\n        this.list.addEventListener('mousemove', (e) => this.handleDragging(e), false);\n\n        // Slider-Events - Touch\n        this.list.addEventListener('touchstart', (e) => this.startDragging(e), false);\n        this.list.addEventListener('touchend', () => this.stopDragging(), false);\n        this.list.addEventListener('touchmove', (e) => this.handleDragging(e), false);\n    },\n    addScrollEvent() {\n        FullDayOverview.list.removeEventListener('scroll', FullDayOverview.addClassCenteredElement);\n        FullDayOverview.list.addEventListener('scroll', FullDayOverview.addClassCenteredElement);\n    },\n    addClassCenteredElement(event, firstStart = false) {\n        const centeredElement = FullDayOverview.getCenteredElement();\n\n        // Prevent multiple execution\n        if (centeredElement === FullDayOverview.centeredElement && !firstStart) return;\n        FullDayOverview.centeredElement = centeredElement;\n        \n        // Check if the item was spotted (and not the gap between items)\n        if (!centeredElement) return;\n        \n        // Remove all 'show' classes from all children\n        FullDayOverview.listItems.forEach(child => {\n            child.classList.remove('show')\n        });\n\n        // Add the 'show' class for highlighting the Element\n        centeredElement.classList.add('show');\n\n        // Show the Conditions of the centered Element\n        DataPlacement.setConditions(centeredElement);\n    },\n    handleClick(direction) {\n        if(direction === \"previous\") {\n          this.list.scrollBy({ left: -this.itemWidth, behavior: \"smooth\" });\n        } else {\n          this.list.scrollBy({ left: this.itemWidth, behavior: \"smooth\" });\n        }\n    },\n    slider: {\n        mouseDown: false,\n        startX: null,\n        scrollLeft: null,\n    },\n    startDragging(e) {\n        this.slider.mouseDown = true;\n        this.slider.startX = (e.pageX || e.touches[0].pageX) - this.list.offsetLeft; // Position Mouse relative to list position\n        this.slider.scrollLeft = this.list.scrollLeft; // Actual scroll-position\n    },\n    stopDragging() {\n        this.slider.mouseDown = false;\n    },\n    handleDragging(e) {\n        e.preventDefault(); // Prevent the standard behavior \n        if (!this.slider.mouseDown) return; // Mouse not clicked? Finish.\n        const x = (e.pageX || e.touches[0].pageX) - this.list.offsetLeft; // Position Mouse relative to list position\n        const scroll = x - this.slider.startX; // Calculate scroll-distance\n        this.list.scrollLeft = this.slider.scrollLeft - scroll; // The scrolling\n    },\n};\n\nconst DayBtns = {\n    day01Btn: document.getElementById('day01Btn'),\n    day02Btn: document.getElementById('day02Btn'),\n    day03Btn: document.getElementById('day03Btn'),\n    addEvents() {\n        this.day01Btn.addEventListener('click', () => {\n            DataPlacement.changeDay(0);\n        });\n        this.day02Btn.addEventListener('click', () => {\n            DataPlacement.changeDay(1);\n        });\n        this.day03Btn.addEventListener('click', () => {\n            DataPlacement.changeDay(2);\n        });\n    },\n    changeClass (day) {\n        this.removeClasses();\n\n        document.getElementById(`day0${day + 1}Btn`).classList.add('active');\n    },\n    removeClasses () {\n        this.day01Btn.classList.remove('active');\n        this.day02Btn.classList.remove('active');\n        this.day03Btn.classList.remove('active');\n    },\n    handleActiveBtnByScreenSize () {\n        const mediaQuery = window.matchMedia(\"(max-width: 800px), (max-height: 590px)\");\n\n        // Check if screen size match\n        if (mediaQuery.matches) {\n            this.removeClasses();\n        } else {\n            document.getElementById(`day0${ThreeDaysOverviewHeadline.checkDotsClasses()}Btn`)\n            .classList.add('active');\n        }\n\n        // Reaction on screen changes\n        mediaQuery.addEventListener('change', (e) => {\n            if (e.matches) {\n                this.removeClasses();\n            } else {\n                document.getElementById(`day0${ThreeDaysOverviewHeadline.checkDotsClasses()}Btn`)\n                .classList.add('active');\n            }\n        });\n    }\n};\n\nconst ThreeDaysOverviewHeadline = {\n    arrowLeft: document.getElementById('arrowLeft'),\n    arrowRight: document.getElementById('arrowRight'),\n    dot01: document.getElementById('dot01'),\n    dot02: document.getElementById('dot02'),\n    dot03: document.getElementById('dot03'),\n    addEvents () {\n        this.arrowLeft.addEventListener('click', () => {\n            DataPlacement.changeDay(-1, 'arrow');\n        });\n        this.arrowRight.addEventListener('click', () => {\n            DataPlacement.changeDay(1, 'arrow');\n        });\n    },\n    changeDotClass (day) {\n        this.removeClasses();\n\n        document.getElementById(`dot0${day + 1}`).classList.add('active');\n    },\n    removeClasses () {\n        this.dot01.classList.remove('active');\n        this.dot02.classList.remove('active');\n        this.dot03.classList.remove('active');\n    },\n    checkDotsClasses() {\n        if (this.dot01.classList.contains('active')) return 1;\n        if (this.dot02.classList.contains('active')) return 2;\n        if (this.dot03.classList.contains('active')) return 3;\n    },\n}\n\nconst ThreeDaysOverviewWindow = {\n    threeDaysOverviewDay: document.getElementById('threeDaysOverviewDay'),\n    closeWindowBtn: document.getElementById('closeWindowBtn'),\n    searchCityInputContainer: document.getElementById('searchCityInputContainer'),\n    touchStartX: 0,\n    touchEndX: 0,\n    minSwipeDistance: 30,\n    touchStartTime: 0,\n    maxClickDuration: 150,\n    fullDayOverview: document.getElementById('fullDayOverviewList'),\n    isFullDayOverviewTouched: false,\n    addSwipeEvents() {\n        this.threeDaysOverviewDay.addEventListener('touchstart', (e) => {\n            this.touchStartX = e.changedTouches[0].screenX;\n            this.touchStartTime = new Date().getTime();\n\n            // Check if the touch is executed inside fullDayOverview\n            this.isFullDayOverviewTouched = this.isEventTargetInside(e.target, this.fullDayOverview);\n        });\n    \n        this.threeDaysOverviewDay.addEventListener('touchmove', (e) => {\n            this.touchEndX = e.changedTouches[0].screenX;\n        });\n    \n        this.threeDaysOverviewDay.addEventListener('touchend', (e) => {\n            if (this.isFullDayOverviewTouched) return;\n\n            const touchEndTime = new Date().getTime();\n            const touchDuration = touchEndTime - this.touchStartTime;\n\n            // Check if it was only a click\n            if (touchDuration > this.maxClickDuration) this.handleSwipe();\n        });\n    },\n    addEvent () {\n        this.closeWindowBtn.addEventListener('click', () => {\n            this.removeClasses();\n        }, { once: true });\n    },\n    changeClasses () {\n        this.threeDaysOverviewDay.classList.add('show', 'transition');\n        this.closeWindowBtn.classList.add('show');\n        this.searchCityInputContainer.classList.add('hide');\n\n        this.addEvent();\n    },\n    removeClasses () {\n        DayBtns.removeClasses();\n        this.threeDaysOverviewDay.classList.remove('show');\n        this.closeWindowBtn.classList.remove('show');\n        this.searchCityInputContainer.classList.remove('hide');\n    },\n    handleSwipe() {\n        const distance = this.touchEndX - this.touchStartX;\n\n        if (Math.abs(distance) >= this.minSwipeDistance) {\n            // Swiped left\n            if (distance < 0) DataPlacement.changeDay(-1, 'arrow');\n            // Swiped right\n            if (distance > 0) DataPlacement.changeDay(1, 'arrow');\n        }\n    },\n    isEventTargetInside(target, parent) {\n        if (!target) return false;\n        if (target === parent) return true;\n        return this.isEventTargetInside(target.parentNode, parent);\n    }\n}\n\nexport { SearchBar, FullDayOverview, DayBtns, ThreeDaysOverviewHeadline, ThreeDaysOverviewWindow };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import \"./style/style.css\";\nimport { DataPlacement } from \"./js/setWeatherData\";\nimport { SearchBar, FullDayOverview, DayBtns, ThreeDaysOverviewHeadline, ThreeDaysOverviewWindow } from \"./js/ui\";\n\n\"use strict\";\n\n\nDataPlacement.setWeatherData();\nSearchBar.addEvents();\nThreeDaysOverviewWindow.addSwipeEvents();\nFullDayOverview.start();\nDayBtns.addEvents();\nDayBtns.handleActiveBtnByScreenSize();\nThreeDaysOverviewHeadline.addEvents();\n\n"],"names":[],"sourceRoot":""}